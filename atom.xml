<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://LinkGaogethub.github.io</id>
    <title>Link 小站</title>
    <updated>2021-12-09T13:31:46.480Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://LinkGaogethub.github.io"/>
    <link rel="self" href="https://LinkGaogethub.github.io/atom.xml"/>
    <subtitle>BIM  相关站点</subtitle>
    <logo>https://LinkGaogethub.github.io/images/avatar.png</logo>
    <icon>https://LinkGaogethub.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Link 小站</rights>
    <entry>
        <title type="html"><![CDATA[技术胖的课程笔记]]></title>
        <id>https://LinkGaogethub.github.io/post/ji-zhu-pang-de-ke-cheng-bi-ji/</id>
        <link href="https://LinkGaogethub.github.io/post/ji-zhu-pang-de-ke-cheng-bi-ji/">
        </link>
        <updated>2021-10-28T14:20:03.000Z</updated>
        <content type="html"><![CDATA[<p>https://jspang.com/detailed?id=56</p>
<pre><code>import React,{Component,Fragment} from 'react';

class AddList extends Component{
    //构造
    constructor(props){
        super(props)//继承方法
        this.state={
            inputValue:&quot;&quot;,
            list:[&quot;123&quot;,&quot;aaa&quot;,]
        }
    }
    render(){
        return(
            &lt;Fragment&gt;
            &lt;div&gt;
                &lt;div&gt; 
                    &lt;label htmlFor =&quot;myinput&quot;&gt;add:&lt;/label&gt;
                    &lt;input id=&quot;myinput&quot; value={this.state.inputValue} onChange={this.inputChange.bind(this)}&gt;&lt;/input&gt;
                &lt;button onClick={this.addList.bind(this)}&gt;add&lt;/button&gt;
                &lt;/div&gt;

                &lt;ul&gt;
                {
                    //遍历数组
                    this.state.list.map((item,index)=&gt; {
                        // return加括号可以内部换行
                        return (
                            // key值是必须的
                            &lt;li key={index+item}
                                onClick={this.delteItem.bind(this,index)}
                                //dangerouslySetInnerHTML={{ __html:item}}
                            &gt;
                                {item}
                            &lt;/li&gt;
                        )
                    })
                }
                &lt;/ul&gt;
            &lt;/div&gt;
            &lt;/Fragment&gt;
        
        )
    }

    inputChange(e){
        this.setState({
            inputValue:e.target.value
            })
    }

    addList(){
        this.setState({
            list:[...this.state.list,this.state.inputValue],
            inputValue:&quot;&quot;
            
        })
    }

    //删除列表
    delteItem (index){
        console.log(index)
        // 要复制一份改了赋值，性能有关
        let list=this.state.list
        list.splice(index,1)
        this.setState({
            list:list
        })

    }
}

export default AddList
</code></pre>
<p>///////////////////////////////////////////////////////////////////////////////////////////////////<br>
this.state.list.map((item,index)=&gt; {<br>
// return加括号可以内部换行<br>
return (<br>
&lt;ADDListItem<br>
key={index+item}<br>
content={item}<br>
index ={index}<br>
// 传出组件方法<br>
deleteItem ={this.delteItem.bind(this)}<br>
/&gt;</p>
<pre><code>)
})
</code></pre>
<p>子组件<br>
import React, { Component } from 'react'</p>
<pre><code>class ADDListItem extends Component {
    constructor(props) {
        super(props);
        this.state = {  }
        //方法绑定
        this.handleClick =this.handleClick.bind(this)
    }
    render() { 
        return ( 
            &lt;li onClick={this.handleClick}&gt;{this.props.content}&lt;/li&gt;
        );
    }

    
handleClick () {
    //调用父组件方法
    this.props.deleteItem(this.props.index)
    }
}



export default ADDListItem;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[React 笔记]]></title>
        <id>https://LinkGaogethub.github.io/post/react-bi-ji/</id>
        <link href="https://LinkGaogethub.github.io/post/react-bi-ji/">
        </link>
        <updated>2021-10-21T13:15:34.000Z</updated>
        <content type="html"><![CDATA[<p>安装 命令行<br>
cnpm install -g create-react-app<br>
create-react-app 01helloworld<br>
<code><br>
npm init -f<br>
cnpm install -g create-react-app<br>
set-ExecutionPolicy RemoteSigned<br>
npm install -g n --force<br>
npm config set registry https://registry.npm.taobao.org<br>
</code><br>
开始浏览器<br>
npm run start<br>
npm start</p>
<pre><code>//组件函数
function Clock(props){
return(
    &lt;h1&gt;timessss is {props.date.toLocaleTimeString()}&lt;/h1&gt;
)
}

function run(){
ReactDOM.render(
&lt;Clock date ={new Date() } /&gt;
,document.querySelector('#root')
)
}

setInterval(run,1000)
</code></pre>
<p>1-3 课时 JSX</p>
<pre><code>let time = new Date().toLocaleTimeString()
let timeString =&quot;当前&quot;
let element1 = (
&lt;div &gt;
    &lt;h1 &gt;{timeString+time}&lt;/h1&gt;
    &lt;h1&gt;1111&lt;/h1&gt;  
&lt;/div&gt;
)

let man= &quot;发烧&quot;;
let element2 = (
&lt;div &gt;
    &lt;h1&gt;{man===&quot;发烧&quot;?&lt;button className={rd}&gt;&quot;隔离&quot;&lt;/button&gt;:&quot;在在床上&quot;}&lt;/h1&gt;
&lt;/div&gt;
)

ReactDOM.render(element2,document.getElementById('root'))
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ASP.NET Core 入门新手]]></title>
        <id>https://LinkGaogethub.github.io/post/aspnet-core-ru-men-xin-shou/</id>
        <link href="https://LinkGaogethub.github.io/post/aspnet-core-ru-men-xin-shou/">
        </link>
        <updated>2021-10-20T13:30:46.000Z</updated>
        <content type="html"><![CDATA[<p>f'g</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Revit 插件]]></title>
        <id>https://LinkGaogethub.github.io/post/revit-cha-jian/</id>
        <link href="https://LinkGaogethub.github.io/post/revit-cha-jian/">
        </link>
        <updated>2021-10-13T11:48:11.000Z</updated>
        <content type="html"><![CDATA[<p>COINS Auto-Section Box 快速剖面框<br>
插件安装上有证书可能22年5月失效，不再免费<br>
<a href="https://apps.autodesk.com/RVT/zh-CN/Detail/Index?id=8920075109543819118&appLang=en&os=Win64&autostart=true">转到COINS Auto-Section Box 下载</a></p>
<p>Color Splasher 染色<br>
<a href="https://apps.autodesk.com/RVT/en/Detail/Index?id=5056644120649615847">转到Color Splasher 下载</a></p>
<p>RQuick Select Trial 快速选择<br>
<a href="https://apps.autodesk.com/RVT/zh-CN/Detail/Index?id=2938312742466834126&appLang=en&os=Win64">转到RQuick Select Trial下载</a></p>
<p>Microdesk Accelerator 管道对接<br>
<a href="https://apps.autodesk.com/RVT/zh-CN/Detail/Index?id=7667497332723137201&appLang=en&os=Win64">转到Microdesk Accelerator下载</a></p>
<p>ViewSync 视图同步<br>
<a href="https://apps.autodesk.com/RVT/zh-CN/Detail/Index?id=3637715903460888384&appLang=en&os=Win32_64">转到ViewSync下载</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[心电心]]></title>
        <id>https://LinkGaogethub.github.io/post/tesst/</id>
        <link href="https://LinkGaogethub.github.io/post/tesst/">
        </link>
        <updated>2021-10-04T05:01:54.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<iframe class="iframe_video "
				src="https://player.bilibili.com/player.html?aid=250141638&bvid=BV1hv411A7kA&cid=398897906&page=1&high_quality=1"
				scrolling="no"  frameborder="no" framespacing="0" allowfullscreen="true"  ></iframe> 
<!-- more -->
<iframe class="ifrae_video "
				src="https://plyer.bilibili.com/player.html?aid=250141638&bvid=BV1hv411A7kA&cid=398897906&page=1&high_quality=1"
				scrolling="no"  frameborder="no" framespacing="0" allowfullscreen="true"  ></iframe>
                <!-- more -->
]]></content>
    </entry>
</feed>